set xEF 0
set yEF 0
set zEF 0

set y_eng 0
set z_eng 0

set yloc_eng 0

# --- Nozzle ---
dimension xloc_nozl    4   1   1
dimension yloc_nozl    4   1   1 
dimension zloc_nozl    4   1   1
dimension a_nozl       4   1   1
dimension zn_nozl      4   1   1
dimension zs_nozl      4   1   1
dimension ns_nozl      4   1   1
dimension z_nozl       4   1   1

despmtr   xloc_nozl   "   0.0;   1.25;   2.75;      4.75"
despmtr   yloc_nozl   "   0.0;    0.0;    0.0;       0.0"
despmtr   zloc_nozl   "   0.0;    0.0;    0.0;       0.0"
despmtr   a_nozl      " 4.198;  4.198;  1.623;     6.917"
despmtr   zn_nozl     " 1.375;  1.325;  1.275;  1.173987"
despmtr   zs_nozl     " 1.375;  1.325;  1.275;  1.173987"
despmtr   ns_nozl     "   2.0;    2.0;    2.0;       2.0"
despmtr   z_nozl      " 1.375;  1.325;  1.275;  1.173987"

# --- Plug ---
dimension x_plug      6   1    1
dimension r_plug      6   1    1

despmtr   x_plug      "  0.0;  1.25; 2.75;   4.75;   5.75; 7.75"
despmtr   r_plug      "0.225; 0.225; 0.75; 0.3625; 0.2375;  0.0"

# Build Nozzle Nacelle OML
mark
  patbeg i xloc_nozl.size-1
    udparg supell ry z_nozl[(i)]  rx_e zs_nozl[(i)]  rx_w zn_nozl[(i)]
    udprim supell n_e ns_nozl[(i)]
    rotatey   90   0   0
    translate xEF+xloc_nozl[(i)]  y_eng+yloc_eng  z_eng+zEF+zloc_nozl[(i)]
  patend

  set i a_nozl.size
  set r sqrt((a_nozl[i]+pi(1)*r_plug[i]*r_plug[i])/pi(1))
  udparg supell rx r  ry r
  udprim supell
  rotatey   90   0   0
  translate xEF+xloc_nozl[(i)]  y_eng+yloc_eng  z_eng+zEF+zloc_nozl[(i)]

  attribute nozlOML 0
blend

store eng_assembly
restore eng_assembly
extract 6
store nozl_exit

restore eng_assembly

# Build Nozzle Nacelle IML Based on Explicit Flow Areas at Nozzle Plenum, Throat and Exit
mark
  patbeg i a_nozl.size-1
    set r sqrt((a_nozl[i]+pi(1)*r_plug[i]*r_plug[i])/pi(1))
    udparg supell rx r  ry r
    udprim supell
    rotatey     90   0   0
    rotatex    -90   0   0
    translate   xEF+xloc_nozl[i] y_eng+yloc_nozl[i] z_eng+zloc_nozl[i]+zEF
  patend
  restore nozl_exit
  restore nozl_exit
  translate 1 0 0
loft 0

subtract
translate -1.0*xloc_nozl[1] 0 0
store nozzle

# --- Create Nozzle Plug ---
mark
  patbeg i x_plug.size-1
    udparg supell  rx  r_plug[i]  ry  r_plug[i]
    udprim supell
    rotatey 90 0 0
    translate  xEF+x_plug[i]  0.0  z_eng+zEF
  patend

  skbeg xEF+x_plug[x_plug.size] 0.0  z_eng+zEF
  skend
rule
translate -1.0*xloc_nozl[1] 0 0 
store plug

set Rfarfield 10
set x1 0
set x2 40
set y_offset 0

cylinder x1 0 0 x2 0 0 Rfarfield
rotatex 90 0 0
translate 0 yEF 0

#box x1 -Rfarfield 0 x2 2*Rfarfield Rfarfield
#translate 0 yEF 0
#subtract

restore plug
subtract none 1 1E-4
restore nozzle
subtract none 1 1E-4

scale 0.3048

dump Nozzle.egads
dump Nozzle.step
dump Nozzle.iges